{
  "contractName": "DefaultOperatorFiltererUpgradeable",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "OperatorNotAllowed",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"OperatorNotAllowed\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"DefaultOperatorFiltererUpgradeable\",\"version\":1},\"userdoc\":{\"errors\":{\"OperatorNotAllowed(address)\":[{\"notice\":\"Emitted when an operator is not allowed.\"}]},\"kind\":\"user\",\"methods\":{},\"notice\":\"Inherits from OperatorFiltererUpgradeable and automatically subscribes to the default OpenSea subscription         when the init function is called.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"operator-filter-registry/src/upgradeable/DefaultOperatorFiltererUpgradeable.sol\":\"DefaultOperatorFiltererUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x037c334add4b033ad3493038c25be1682d78c00992e1acb0e2795caff3925271\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8a313cf42389440e2706837c91370323b85971c06afd6d056d21e2bc86459618\",\"dweb:/ipfs/QmT8XUrUvQ9aZaPKrqgRU2JVGWnaxBcUYJA7Q7K5KcLBSZ\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06\",\"dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879\"]},\"operator-filter-registry/src/IOperatorFilterRegistry.sol\":{\"keccak256\":\"0x56ad8df389958dbf89cc30196e5f37779ee87d2e8b551d84a8d0a696e1c69937\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ca12c8b2d8a6c0ef1ba2204be8628c1443d9371c37aa619a3cc485267b6a30c\",\"dweb:/ipfs/QmaKXZeCR6kPRXCYo6NZJFnbBEa4eWwBKRYAKyY87vBrtc\"]},\"operator-filter-registry/src/lib/Constants.sol\":{\"keccak256\":\"0x7528c20593155653256c5ea043e0f56e65b2f8c59946c61fb136a22868d4184e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://71d0b1ac75a8bfb054d13415b01a32fdee313975ef154ed21e8e49ef92a1b308\",\"dweb:/ipfs/QmTMjZne7RgUGLjkB5RfyZwuny2Qw1AmznYuHQJp5rePdu\"]},\"operator-filter-registry/src/upgradeable/DefaultOperatorFiltererUpgradeable.sol\":{\"keccak256\":\"0x119dcbed26db0266aea10edf6a2127658ac66d20c0f4871f502a6ce9350327c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://43d16b6fe141edf26d5a4caad59479235e611c147039d71ece058091c9c9a411\",\"dweb:/ipfs/QmaXuZnoWexKWUGyY8Y3Ppfdqr4Z7x4ntmJKeUL7F6Z25E\"]},\"operator-filter-registry/src/upgradeable/OperatorFiltererUpgradeable.sol\":{\"keccak256\":\"0xd6e43929d2561f2f07b4b86753d3e7546b89fd494c5751dadbd8a54761f794d2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eff0fdbe0204a950315ab128b32d861dc8d413adccd3404792883c428a22eaaa\",\"dweb:/ipfs/QmSdbeCqdtLVLZc6jJ7G4xnXBX5SGyqxvF7sKrTwnbnqfk\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.13;\n\nimport {OperatorFiltererUpgradeable} from \"./OperatorFiltererUpgradeable.sol\";\nimport {CANONICAL_CORI_SUBSCRIPTION} from \"../lib/Constants.sol\";\n\n/**\n * @title  DefaultOperatorFiltererUpgradeable\n * @notice Inherits from OperatorFiltererUpgradeable and automatically subscribes to the default OpenSea subscription\n *         when the init function is called.\n */\nabstract contract DefaultOperatorFiltererUpgradeable is OperatorFiltererUpgradeable {\n    /// @dev The upgradeable initialize function that should be called when the contract is being deployed.\n    function __DefaultOperatorFilterer_init() internal onlyInitializing {\n        OperatorFiltererUpgradeable.__OperatorFilterer_init(CANONICAL_CORI_SUBSCRIPTION, true);\n    }\n}\n",
  "sourcePath": "operator-filter-registry\\src\\upgradeable\\DefaultOperatorFiltererUpgradeable.sol",
  "ast": {
    "absolutePath": "operator-filter-registry/src/upgradeable/DefaultOperatorFiltererUpgradeable.sol",
    "exportedSymbols": {
      "CANONICAL_CORI_SUBSCRIPTION": [
        4142
      ],
      "DefaultOperatorFiltererUpgradeable": [
        4166
      ],
      "OperatorFiltererUpgradeable": [
        4321
      ]
    },
    "id": 4167,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4144,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".13"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:24:21"
      },
      {
        "absolutePath": "operator-filter-registry/src/upgradeable/OperatorFiltererUpgradeable.sol",
        "file": "./OperatorFiltererUpgradeable.sol",
        "id": 4146,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4167,
        "sourceUnit": 4322,
        "src": "58:78:21",
        "symbolAliases": [
          {
            "foreign": {
              "id": 4145,
              "name": "OperatorFiltererUpgradeable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 4321,
              "src": "66:27:21",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "operator-filter-registry/src/lib/Constants.sol",
        "file": "../lib/Constants.sol",
        "id": 4148,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4167,
        "sourceUnit": 4143,
        "src": "137:65:21",
        "symbolAliases": [
          {
            "foreign": {
              "id": 4147,
              "name": "CANONICAL_CORI_SUBSCRIPTION",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 4142,
              "src": "145:27:21",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 4150,
              "name": "OperatorFiltererUpgradeable",
              "nameLocations": [
                "477:27:21"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4321,
              "src": "477:27:21"
            },
            "id": 4151,
            "nodeType": "InheritanceSpecifier",
            "src": "477:27:21"
          }
        ],
        "canonicalName": "DefaultOperatorFiltererUpgradeable",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 4149,
          "nodeType": "StructuredDocumentation",
          "src": "204:216:21",
          "text": " @title  DefaultOperatorFiltererUpgradeable\n @notice Inherits from OperatorFiltererUpgradeable and automatically subscribes to the default OpenSea subscription\n         when the init function is called."
        },
        "fullyImplemented": true,
        "id": 4166,
        "linearizedBaseContracts": [
          4166,
          4321,
          319
        ],
        "name": "DefaultOperatorFiltererUpgradeable",
        "nameLocation": "439:34:21",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 4164,
              "nodeType": "Block",
              "src": "687:103:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4160,
                        "name": "CANONICAL_CORI_SUBSCRIPTION",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4142,
                        "src": "749:27:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 4161,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "778:4:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 4157,
                        "name": "OperatorFiltererUpgradeable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4321,
                        "src": "697:27:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_OperatorFiltererUpgradeable_$4321_$",
                          "typeString": "type(contract OperatorFiltererUpgradeable)"
                        }
                      },
                      "id": 4159,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "725:23:21",
                      "memberName": "__OperatorFilterer_init",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4259,
                      "src": "697:51:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool)"
                      }
                    },
                    "id": 4162,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "697:86:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4163,
                  "nodeType": "ExpressionStatement",
                  "src": "697:86:21"
                }
              ]
            },
            "documentation": {
              "id": 4152,
              "nodeType": "StructuredDocumentation",
              "src": "511:103:21",
              "text": "@dev The upgradeable initialize function that should be called when the contract is being deployed."
            },
            "id": 4165,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 4155,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 4154,
                  "name": "onlyInitializing",
                  "nameLocations": [
                    "670:16:21"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 264,
                  "src": "670:16:21"
                },
                "nodeType": "ModifierInvocation",
                "src": "670:16:21"
              }
            ],
            "name": "__DefaultOperatorFilterer_init",
            "nameLocation": "628:30:21",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4153,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "658:2:21"
            },
            "returnParameters": {
              "id": 4156,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "687:0:21"
            },
            "scope": 4166,
            "src": "619:171:21",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 4167,
        "src": "421:371:21",
        "usedErrors": [
          4180
        ]
      }
    ],
    "src": "32:761:21"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.17+commit.8df45f5f.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.12",
  "updatedAt": "2023-02-21T10:58:35.845Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "title": "DefaultOperatorFiltererUpgradeable",
    "version": 1
  },
  "userdoc": {
    "errors": {
      "OperatorNotAllowed(address)": [
        {
          "notice": "Emitted when an operator is not allowed."
        }
      ]
    },
    "kind": "user",
    "methods": {},
    "notice": "Inherits from OperatorFiltererUpgradeable and automatically subscribes to the default OpenSea subscription         when the init function is called.",
    "version": 1
  }
}